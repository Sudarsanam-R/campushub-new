version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      target: runner
    image: campushub:latest
    container_name: campushub-app
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/campushub?schema=public
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      # Add other environment variables here
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - campushub-network

  # Database (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: campushub-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: campushub
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - campushub-network

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: campushub-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - campushub-network

  # Database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: campushub-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - db
    networks:
      - campushub-network

  # Redis management (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: campushub-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - campushub-network

volumes:
  postgres_data:
  redis_data:

networks:
  campushub-network:
    driver: bridge

# Development overrides
x-develop:
  services:
    app:
      build:
        target: deps
      command: npm run dev
      ports:
        - '3000:3000'
      environment:
        - NODE_ENV=development
        - DATABASE_URL=postgresql://postgres:postgres@db:5432/campushub?schema=public
        - NEXTAUTH_URL=http://localhost:3000
        - NEXTAUTH_SECRET=dev-secret-change-this-in-production
        - NEXT_TELEMETRY_DISABLED=1
      volumes:
        - .:/app
        - /app/node_modules
        - /app/.next
      depends_on:
        db:
          condition: service_healthy
      networks:
        - campushub-network
